{"ast":null,"code":"var _jsxFileName = \"/Users/danielburt/Desktop/React/cooking-project-2/src/Components/Cart/CartItemList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport MenuContext from \"../../Store/menu-context\";\nimport CartItem from \"./CartItem\";\nimport Button from \"../../UI/Button\"; // function cartReducer(state, action) {\n//   if (action.name === \"Humble Pie\") {\n//   } else if (action.name === \"Grumblecakes\") {\n//   } else if (action.name === \"Tumblepuppies, Hush\") {\n//   }\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CartItemList = props => {\n  _s();\n\n  const ctx = useContext(MenuContext); //item in cart = {name: , price: , amount: }\n  //   const [totalPrice, setTotalPrice] = useState(0);\n  // function displayName(){\n  //     console.log(props.)\n  // }\n\n  const subtotals = ctx.yourCart.map(item => item.price * item.number);\n\n  const reducer = (a, b) => a + b;\n\n  const totals = subtotals.reduce(reducer);\n  ctx.setTotalPrice(totals);\n\n  function setNumber(itemName, number) {\n    ctx.yourCart.forEach(item => {\n      if (item.name === itemName) {\n        item.number = number;\n      }\n    });\n  } // useEffect(() => \n  //   setTotalPrice(totals)\n  // , [totals, setNumber()] );\n  // useEffect(() => {\n  //   return () => {\n  //     setSubtotalList(subtotalList);\n  //   }\n  // }, [subtotalList] )\n\n\n  let cartDisplay = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No items in cart\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 21\n  }, this);\n\n  if (ctx.yourCart.length > 0) {\n    cartDisplay = ctx.yourCart.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      price: item.price,\n      number: item.number,\n      setTotalPrice: ctx.setTotalPrice,\n      setItemNumber: setNumber\n    }, item.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [cartDisplay, /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: ctx.totalPrice.toFixed(2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        buttonLabel: \"Close\",\n        buttonFunction: props.closeModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        buttonLabel: \"Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CartItemList, \"/dMy7t63NXD4eYACoT93CePwGrg=\");\n\n_c = CartItemList;\nexport default CartItemList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartItemList\");","map":{"version":3,"sources":["/Users/danielburt/Desktop/React/cooking-project-2/src/Components/Cart/CartItemList.js"],"names":["React","useContext","MenuContext","CartItem","Button","CartItemList","props","ctx","subtotals","yourCart","map","item","price","number","reducer","a","b","totals","reduce","setTotalPrice","setNumber","itemName","forEach","name","cartDisplay","length","key","totalPrice","toFixed","closeModal"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAOC,WAAP,MAAwB,0BAAxB;AAEA,OAAOC,QAAP,MAAqB,YAArB;AAEA,OAAOC,MAAP,MAAmB,iBAAnB,C,CAEA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAMC,GAAG,GAAGN,UAAU,CAACC,WAAD,CAAtB,CAD8B,CAG9B;AACA;AAEA;AACA;AACA;;AAGA,QAAMM,SAAS,GAAGD,GAAG,CAACE,QAAJ,CAAaC,GAAb,CAAkBC,IAAD,IAAUA,IAAI,CAACC,KAAL,GAAaD,IAAI,CAACE,MAA7C,CAAlB;;AAEA,QAAMC,OAAO,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAA9B;;AACA,QAAMC,MAAM,GAAGT,SAAS,CAACU,MAAV,CAAiBJ,OAAjB,CAAf;AAEAP,EAAAA,GAAG,CAACY,aAAJ,CAAkBF,MAAlB;;AACA,WAASG,SAAT,CAAmBC,QAAnB,EAA6BR,MAA7B,EAAqC;AACnCN,IAAAA,GAAG,CAACE,QAAJ,CAAaa,OAAb,CAAsBX,IAAD,IAAU;AAC7B,UAAIA,IAAI,CAACY,IAAL,KAAcF,QAAlB,EAA4B;AAC1BV,QAAAA,IAAI,CAACE,MAAL,GAAcA,MAAd;AACD;AACF,KAJD;AAKD,GAvB6B,CAyB9B;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAGA,MAAIW,WAAW,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAlB;;AAEA,MAAIjB,GAAG,CAACE,QAAJ,CAAagB,MAAb,GAAsB,CAA1B,EAA6B;AAC3BD,IAAAA,WAAW,GAAGjB,GAAG,CAACE,QAAJ,CAAaC,GAAb,CAAkBC,IAAD,iBAC7B,QAAC,QAAD;AACE,MAAA,IAAI,EAAEA,IAAI,CAACY,IADb;AAEE,MAAA,KAAK,EAAEZ,IAAI,CAACC,KAFd;AAGE,MAAA,MAAM,EAAED,IAAI,CAACE,MAHf;AAKE,MAAA,aAAa,EAAEN,GAAG,CAACY,aALrB;AAME,MAAA,aAAa,EAAEC;AANjB,OAIOT,IAAI,CAACe,GAJZ;AAAA;AAAA;AAAA;AAAA,YADY,CAAd;AAUD;;AAED,sBACE;AAAA,eACGF,WADH,eAEE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAIjB,GAAG,CAACoB,UAAJ,CAAeC,OAAf,CAAuB,CAAvB;AAAJ;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,MAAD;AAAQ,QAAA,WAAW,EAAE,OAArB;AAA8B,QAAA,cAAc,EAAEtB,KAAK,CAACuB;AAApD;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,MAAD;AAAQ,QAAA,WAAW,EAAE;AAArB;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAWD,CA9DD;;GAAMxB,Y;;KAAAA,Y;AAgEN,eAAeA,YAAf","sourcesContent":["import React, { useContext } from \"react\";\n\nimport MenuContext from \"../../Store/menu-context\";\n\nimport CartItem from \"./CartItem\";\n\nimport Button from \"../../UI/Button\";\n\n// function cartReducer(state, action) {\n//   if (action.name === \"Humble Pie\") {\n//   } else if (action.name === \"Grumblecakes\") {\n//   } else if (action.name === \"Tumblepuppies, Hush\") {\n//   }\n// }\n\nconst CartItemList = (props) => {\n  const ctx = useContext(MenuContext);\n\n  //item in cart = {name: , price: , amount: }\n  //   const [totalPrice, setTotalPrice] = useState(0);\n\n  // function displayName(){\n  //     console.log(props.)\n  // }\n\n\n  const subtotals = ctx.yourCart.map((item) => item.price * item.number);\n\n  const reducer = (a, b) => a + b;\n  const totals = subtotals.reduce(reducer);\n\n  ctx.setTotalPrice(totals)\n  function setNumber(itemName, number) {\n    ctx.yourCart.forEach((item) => {\n      if (item.name === itemName) {\n        item.number = number;\n      }\n    });\n  }\n\n  // useEffect(() => \n  //   setTotalPrice(totals)\n  // , [totals, setNumber()] );\n\n  // useEffect(() => {\n  //   return () => {\n  //     setSubtotalList(subtotalList);\n  //   }\n  // }, [subtotalList] )\n\n\n  let cartDisplay = <p>No items in cart</p>;\n\n  if (ctx.yourCart.length > 0) {\n    cartDisplay = ctx.yourCart.map((item) => (\n      <CartItem\n        name={item.name}\n        price={item.price}\n        number={item.number}\n        key={item.key}\n        setTotalPrice={ctx.setTotalPrice}\n        setItemNumber={setNumber}\n      />\n    ));\n  }\n\n  return (\n    <>\n      {cartDisplay}\n      <footer>\n        <p>Total Amount</p>\n        <p>{ctx.totalPrice.toFixed(2)}</p>\n        <Button buttonLabel={\"Close\"} buttonFunction={props.closeModal} />\n        <Button buttonLabel={\"Order\"} />\n      </footer>\n    </>\n  );\n};\n\nexport default CartItemList;\n"]},"metadata":{},"sourceType":"module"}